<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnjs.agriculture.mapper.SensorDataMapper" >
  <resultMap id="BaseResultMap" type="com.lnjs.agriculture.entity.SensorData" >
    <result column="RecordTime" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="SensorAddress" property="sensorAddress" jdbcType="INTEGER" />
    <result column="Data00" property="data00" jdbcType="INTEGER" />
    <result column="Data01" property="data01" jdbcType="INTEGER" />
    <result column="Data02" property="data02" jdbcType="INTEGER" />
    <result column="Data03" property="data03" jdbcType="INTEGER" />
    <result column="Data04" property="data04" jdbcType="INTEGER" />
    <result column="Data05" property="data05" jdbcType="INTEGER" />
    <result column="Data06" property="data06" jdbcType="INTEGER" />
    <result column="Data07" property="data07" jdbcType="INTEGER" />
    <result column="Data08" property="data08" jdbcType="INTEGER" />
    <result column="Data09" property="data09" jdbcType="INTEGER" />
    <result column="Data0A" property="data0a" jdbcType="INTEGER" />
    <result column="Data0B" property="data0b" jdbcType="INTEGER" />
    <result column="Data0C" property="data0c" jdbcType="INTEGER" />
    <result column="Data0D" property="data0d" jdbcType="INTEGER" />
    <result column="Data0E" property="data0e" jdbcType="INTEGER" />
    <result column="Data0F" property="data0f" jdbcType="INTEGER" />
    <result column="Data10" property="data10" jdbcType="INTEGER" />
    <result column="Data11" property="data11" jdbcType="INTEGER" />
    <result column="Data12" property="data12" jdbcType="INTEGER" />
    <result column="Data13" property="data13" jdbcType="INTEGER" />
    <result column="Data14" property="data14" jdbcType="INTEGER" />
    <result column="Data15" property="data15" jdbcType="INTEGER" />
    <result column="Data16" property="data16" jdbcType="INTEGER" />
    <result column="Data17" property="data17" jdbcType="INTEGER" />
    <result column="Data18" property="data18" jdbcType="INTEGER" />
    <result column="Data19" property="data19" jdbcType="INTEGER" />
    <result column="Data1A" property="data1a" jdbcType="INTEGER" />
    <result column="Data1B" property="data1b" jdbcType="INTEGER" />
    <result column="Data1C" property="data1c" jdbcType="INTEGER" />
    <result column="Data1D" property="data1d" jdbcType="INTEGER" />
    <result column="Data1E" property="data1e" jdbcType="INTEGER" />
    <result column="Data1F" property="data1f" jdbcType="INTEGER" />
    <result column="Data20" property="data20" jdbcType="INTEGER" />
    <result column="Data21" property="data21" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lnjs.agriculture.entity.SensorDataWithBLOBs" extends="BaseResultMap" >
    <result column="COMNum" property="comnum" jdbcType="LONGVARCHAR" />
    <result column="Mark" property="mark" jdbcType="LONGVARCHAR" />
    <result column="Preserve" property="preserve" jdbcType="LONGVARCHAR" />
  </resultMap>
  <select id="getAllData" resultMap="BaseResultMap">
    select top 100 * from SensorOriginal_0_Test
  </select>
  <select id="getRecordTime" resultType="String">
    select recordtime from SensorOriginal_0_Test
  </select>
  <select id="getSensorAddress" resultType="String">
    select sensoraddress from SensorOriginal_0_Test
  </select>
  <select id="getComNum" resultType="String">
    select COMNum from SensorOriginal_0_Test
  </select>
  <select id="getMark" resultType="String">
    select Mark from SensorOriginal_0_Test
  </select>
  <select id="getPreserve" resultType="String">
    select Preserve from SensorOriginal_0_Test
  </select>
  <select id="getData00" resultType="Long">
    select data00 from SensorOriginal_0_Test
  </select>
  <select id="getData01" resultType="Long">
    select data01 from SensorOriginal_0_Test
  </select>
  <select id="getData02" resultType="Long">
    select data02 from SensorOriginal_0_Test
  </select>
  <select id="getData03" resultType="Long">
    select data03 from SensorOriginal_0_Test
  </select>
  <select id="getData04" resultType="Long">
    select data04 from SensorOriginal_0_Test
  </select>
  <select id="getData05" resultType="Long">
    select data05 from SensorOriginal_0_Test
  </select>
  <select id="getData06" resultType="Long">
    select data06 from SensorOriginal_0_Test
  </select>
  <select id="getData07" resultType="Long">
    select data07 from SensorOriginal_0_Test
  </select>
  <select id="getData08" resultType="Long">
    select data08 from SensorOriginal_0_Test
  </select>
  <select id="getData09" resultType="Long">
    select data09 from SensorOriginal_0_Test
  </select>
  <select id="getData0A" resultType="Long">
    select data0a from SensorOriginal_0_Test
  </select>
  <select id="getData0B" resultType="Long">
    select data0b from SensorOriginal_0_Test
  </select>
  <select id="getData0C" resultType="Long">
    select data0c from SensorOriginal_0_Test
  </select>
  <select id="getData0D" resultType="Long">
    select data0d from SensorOriginal_0_Test
  </select>
  <select id="getData0E" resultType="Long">
    select data0e from SensorOriginal_0_Test
  </select>
  <select id="getData0F" resultType="Long">
    select data0f from SensorOriginal_0_Test
  </select>
  <select id="getData10" resultType="Long">
    select data10 from SensorOriginal_0_Test
  </select>
  <select id="getData11" resultType="Long">
    select data11 from SensorOriginal_0_Test
  </select>
  <select id="getData12" resultType="Long">
    select data12 from SensorOriginal_0_Test
  </select>
  <select id="getData13" resultType="Long">
    select data13 from SensorOriginal_0_Test
  </select>
  <select id="getData14" resultType="Long">
    select data14 from SensorOriginal_0_Test
  </select>
  <select id="getData15" resultType="Long">
    select data15 from SensorOriginal_0_Test
  </select>
  <select id="getData16" resultType="Long">
    select data16 from SensorOriginal_0_Test
  </select>
  <select id="getData17" resultType="Long">
    select data17 from SensorOriginal_0_Test
  </select>
  <select id="getData18" resultType="Long">
    select data18 from SensorOriginal_0_Test
  </select>
  <select id="getData19" resultType="Long">
    select data19 from SensorOriginal_0_Test
  </select>
  <select id="getData1A" resultType="Long">
    select data1a from SensorOriginal_0_Test
  </select>
  <select id="getData1B" resultType="Long">
    select data1b from SensorOriginal_0_Test
  </select>
  <select id="getData1C" resultType="Long">
    select data1c from SensorOriginal_0_Test
  </select>
  <select id="getData1D" resultType="Long">
    select data1d from SensorOriginal_0_Test
  </select>
  <select id="getData1E" resultType="Long">
    select data1e from SensorOriginal_0_Test
  </select>
  <select id="getData1F" resultType="Long">
    select data1f from SensorOriginal_0_Test
  </select>
  <select id="getData20" resultType="Long">
    select data20 from SensorOriginal_0_Test
  </select>
  <select id="getData21" resultType="Long">
    select data21 from SensorOriginal_0_Test
  </select>

  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Blob_Column_List" >
    COMNum, Mark, Preserve
  </sql>
  <insert id="insert" parameterType="com.lnjs.agriculture.entity.SensorDataWithBLOBs" >
    insert into SensorOriginal_0_Test (RecordTime, SensorAddress, Data00, 
      Data01, Data02, Data03, 
      Data04, Data05, Data06, 
      Data07, Data08, Data09, 
      Data0A, Data0B, Data0C, 
      Data0D, Data0E, Data0F, 
      Data10, Data11, Data12, 
      Data13, Data14, Data15, 
      Data16, Data17, Data18, 
      Data19, Data1A, Data1B, 
      Data1C, Data1D, Data1E, 
      Data1F, Data20, Data21, 
      COMNum, Mark, Preserve
      )
    values (#{recordtime,jdbcType=TIMESTAMP}, #{sensoraddress,jdbcType=INTEGER}, #{data00,jdbcType=INTEGER}, 
      #{data01,jdbcType=INTEGER}, #{data02,jdbcType=INTEGER}, #{data03,jdbcType=INTEGER}, 
      #{data04,jdbcType=INTEGER}, #{data05,jdbcType=INTEGER}, #{data06,jdbcType=INTEGER}, 
      #{data07,jdbcType=INTEGER}, #{data08,jdbcType=INTEGER}, #{data09,jdbcType=INTEGER}, 
      #{data0a,jdbcType=INTEGER}, #{data0b,jdbcType=INTEGER}, #{data0c,jdbcType=INTEGER}, 
      #{data0d,jdbcType=INTEGER}, #{data0e,jdbcType=INTEGER}, #{data0f,jdbcType=INTEGER}, 
      #{data10,jdbcType=INTEGER}, #{data11,jdbcType=INTEGER}, #{data12,jdbcType=INTEGER}, 
      #{data13,jdbcType=INTEGER}, #{data14,jdbcType=INTEGER}, #{data15,jdbcType=INTEGER}, 
      #{data16,jdbcType=INTEGER}, #{data17,jdbcType=INTEGER}, #{data18,jdbcType=INTEGER}, 
      #{data19,jdbcType=INTEGER}, #{data1a,jdbcType=INTEGER}, #{data1b,jdbcType=INTEGER}, 
      #{data1c,jdbcType=INTEGER}, #{data1d,jdbcType=INTEGER}, #{data1e,jdbcType=INTEGER}, 
      #{data1f,jdbcType=INTEGER}, #{data20,jdbcType=INTEGER}, #{data21,jdbcType=INTEGER}, 
      #{comnum,jdbcType=LONGVARCHAR}, #{mark,jdbcType=LONGVARCHAR}, #{preserve,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lnjs.agriculture.entity.SensorDataWithBLOBs" >
    insert into SensorOriginal_0_Test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordtime != null" >
        RecordTime,
      </if>
      <if test="sensoraddress != null" >
        SensorAddress,
      </if>
      <if test="data00 != null" >
        Data00,
      </if>
      <if test="data01 != null" >
        Data01,
      </if>
      <if test="data02 != null" >
        Data02,
      </if>
      <if test="data03 != null" >
        Data03,
      </if>
      <if test="data04 != null" >
        Data04,
      </if>
      <if test="data05 != null" >
        Data05,
      </if>
      <if test="data06 != null" >
        Data06,
      </if>
      <if test="data07 != null" >
        Data07,
      </if>
      <if test="data08 != null" >
        Data08,
      </if>
      <if test="data09 != null" >
        Data09,
      </if>
      <if test="data0a != null" >
        Data0A,
      </if>
      <if test="data0b != null" >
        Data0B,
      </if>
      <if test="data0c != null" >
        Data0C,
      </if>
      <if test="data0d != null" >
        Data0D,
      </if>
      <if test="data0e != null" >
        Data0E,
      </if>
      <if test="data0f != null" >
        Data0F,
      </if>
      <if test="data10 != null" >
        Data10,
      </if>
      <if test="data11 != null" >
        Data11,
      </if>
      <if test="data12 != null" >
        Data12,
      </if>
      <if test="data13 != null" >
        Data13,
      </if>
      <if test="data14 != null" >
        Data14,
      </if>
      <if test="data15 != null" >
        Data15,
      </if>
      <if test="data16 != null" >
        Data16,
      </if>
      <if test="data17 != null" >
        Data17,
      </if>
      <if test="data18 != null" >
        Data18,
      </if>
      <if test="data19 != null" >
        Data19,
      </if>
      <if test="data1a != null" >
        Data1A,
      </if>
      <if test="data1b != null" >
        Data1B,
      </if>
      <if test="data1c != null" >
        Data1C,
      </if>
      <if test="data1d != null" >
        Data1D,
      </if>
      <if test="data1e != null" >
        Data1E,
      </if>
      <if test="data1f != null" >
        Data1F,
      </if>
      <if test="data20 != null" >
        Data20,
      </if>
      <if test="data21 != null" >
        Data21,
      </if>
      <if test="comnum != null" >
        COMNum,
      </if>
      <if test="mark != null" >
        Mark,
      </if>
      <if test="preserve != null" >
        Preserve,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordtime != null" >
        #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sensoraddress != null" >
        #{sensoraddress,jdbcType=INTEGER},
      </if>
      <if test="data00 != null" >
        #{data00,jdbcType=INTEGER},
      </if>
      <if test="data01 != null" >
        #{data01,jdbcType=INTEGER},
      </if>
      <if test="data02 != null" >
        #{data02,jdbcType=INTEGER},
      </if>
      <if test="data03 != null" >
        #{data03,jdbcType=INTEGER},
      </if>
      <if test="data04 != null" >
        #{data04,jdbcType=INTEGER},
      </if>
      <if test="data05 != null" >
        #{data05,jdbcType=INTEGER},
      </if>
      <if test="data06 != null" >
        #{data06,jdbcType=INTEGER},
      </if>
      <if test="data07 != null" >
        #{data07,jdbcType=INTEGER},
      </if>
      <if test="data08 != null" >
        #{data08,jdbcType=INTEGER},
      </if>
      <if test="data09 != null" >
        #{data09,jdbcType=INTEGER},
      </if>
      <if test="data0a != null" >
        #{data0a,jdbcType=INTEGER},
      </if>
      <if test="data0b != null" >
        #{data0b,jdbcType=INTEGER},
      </if>
      <if test="data0c != null" >
        #{data0c,jdbcType=INTEGER},
      </if>
      <if test="data0d != null" >
        #{data0d,jdbcType=INTEGER},
      </if>
      <if test="data0e != null" >
        #{data0e,jdbcType=INTEGER},
      </if>
      <if test="data0f != null" >
        #{data0f,jdbcType=INTEGER},
      </if>
      <if test="data10 != null" >
        #{data10,jdbcType=INTEGER},
      </if>
      <if test="data11 != null" >
        #{data11,jdbcType=INTEGER},
      </if>
      <if test="data12 != null" >
        #{data12,jdbcType=INTEGER},
      </if>
      <if test="data13 != null" >
        #{data13,jdbcType=INTEGER},
      </if>
      <if test="data14 != null" >
        #{data14,jdbcType=INTEGER},
      </if>
      <if test="data15 != null" >
        #{data15,jdbcType=INTEGER},
      </if>
      <if test="data16 != null" >
        #{data16,jdbcType=INTEGER},
      </if>
      <if test="data17 != null" >
        #{data17,jdbcType=INTEGER},
      </if>
      <if test="data18 != null" >
        #{data18,jdbcType=INTEGER},
      </if>
      <if test="data19 != null" >
        #{data19,jdbcType=INTEGER},
      </if>
      <if test="data1a != null" >
        #{data1a,jdbcType=INTEGER},
      </if>
      <if test="data1b != null" >
        #{data1b,jdbcType=INTEGER},
      </if>
      <if test="data1c != null" >
        #{data1c,jdbcType=INTEGER},
      </if>
      <if test="data1d != null" >
        #{data1d,jdbcType=INTEGER},
      </if>
      <if test="data1e != null" >
        #{data1e,jdbcType=INTEGER},
      </if>
      <if test="data1f != null" >
        #{data1f,jdbcType=INTEGER},
      </if>
      <if test="data20 != null" >
        #{data20,jdbcType=INTEGER},
      </if>
      <if test="data21 != null" >
        #{data21,jdbcType=INTEGER},
      </if>
      <if test="comnum != null" >
        #{comnum,jdbcType=LONGVARCHAR},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=LONGVARCHAR},
      </if>
      <if test="preserve != null" >
        #{preserve,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update SensorOriginal_0_Test
    <set >
      <if test="record.recordtime != null" >
        RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sensoraddress != null" >
        SensorAddress = #{record.sensoraddress,jdbcType=INTEGER},
      </if>
      <if test="record.data00 != null" >
        Data00 = #{record.data00,jdbcType=INTEGER},
      </if>
      <if test="record.data01 != null" >
        Data01 = #{record.data01,jdbcType=INTEGER},
      </if>
      <if test="record.data02 != null" >
        Data02 = #{record.data02,jdbcType=INTEGER},
      </if>
      <if test="record.data03 != null" >
        Data03 = #{record.data03,jdbcType=INTEGER},
      </if>
      <if test="record.data04 != null" >
        Data04 = #{record.data04,jdbcType=INTEGER},
      </if>
      <if test="record.data05 != null" >
        Data05 = #{record.data05,jdbcType=INTEGER},
      </if>
      <if test="record.data06 != null" >
        Data06 = #{record.data06,jdbcType=INTEGER},
      </if>
      <if test="record.data07 != null" >
        Data07 = #{record.data07,jdbcType=INTEGER},
      </if>
      <if test="record.data08 != null" >
        Data08 = #{record.data08,jdbcType=INTEGER},
      </if>
      <if test="record.data09 != null" >
        Data09 = #{record.data09,jdbcType=INTEGER},
      </if>
      <if test="record.data0a != null" >
        Data0A = #{record.data0a,jdbcType=INTEGER},
      </if>
      <if test="record.data0b != null" >
        Data0B = #{record.data0b,jdbcType=INTEGER},
      </if>
      <if test="record.data0c != null" >
        Data0C = #{record.data0c,jdbcType=INTEGER},
      </if>
      <if test="record.data0d != null" >
        Data0D = #{record.data0d,jdbcType=INTEGER},
      </if>
      <if test="record.data0e != null" >
        Data0E = #{record.data0e,jdbcType=INTEGER},
      </if>
      <if test="record.data0f != null" >
        Data0F = #{record.data0f,jdbcType=INTEGER},
      </if>
      <if test="record.data10 != null" >
        Data10 = #{record.data10,jdbcType=INTEGER},
      </if>
      <if test="record.data11 != null" >
        Data11 = #{record.data11,jdbcType=INTEGER},
      </if>
      <if test="record.data12 != null" >
        Data12 = #{record.data12,jdbcType=INTEGER},
      </if>
      <if test="record.data13 != null" >
        Data13 = #{record.data13,jdbcType=INTEGER},
      </if>
      <if test="record.data14 != null" >
        Data14 = #{record.data14,jdbcType=INTEGER},
      </if>
      <if test="record.data15 != null" >
        Data15 = #{record.data15,jdbcType=INTEGER},
      </if>
      <if test="record.data16 != null" >
        Data16 = #{record.data16,jdbcType=INTEGER},
      </if>
      <if test="record.data17 != null" >
        Data17 = #{record.data17,jdbcType=INTEGER},
      </if>
      <if test="record.data18 != null" >
        Data18 = #{record.data18,jdbcType=INTEGER},
      </if>
      <if test="record.data19 != null" >
        Data19 = #{record.data19,jdbcType=INTEGER},
      </if>
      <if test="record.data1a != null" >
        Data1A = #{record.data1a,jdbcType=INTEGER},
      </if>
      <if test="record.data1b != null" >
        Data1B = #{record.data1b,jdbcType=INTEGER},
      </if>
      <if test="record.data1c != null" >
        Data1C = #{record.data1c,jdbcType=INTEGER},
      </if>
      <if test="record.data1d != null" >
        Data1D = #{record.data1d,jdbcType=INTEGER},
      </if>
      <if test="record.data1e != null" >
        Data1E = #{record.data1e,jdbcType=INTEGER},
      </if>
      <if test="record.data1f != null" >
        Data1F = #{record.data1f,jdbcType=INTEGER},
      </if>
      <if test="record.data20 != null" >
        Data20 = #{record.data20,jdbcType=INTEGER},
      </if>
      <if test="record.data21 != null" >
        Data21 = #{record.data21,jdbcType=INTEGER},
      </if>
      <if test="record.comnum != null" >
        COMNum = #{record.comnum,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.mark != null" >
        Mark = #{record.mark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.preserve != null" >
        Preserve = #{record.preserve,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update SensorOriginal_0_Test
    set RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      SensorAddress = #{record.sensoraddress,jdbcType=INTEGER},
      Data00 = #{record.data00,jdbcType=INTEGER},
      Data01 = #{record.data01,jdbcType=INTEGER},
      Data02 = #{record.data02,jdbcType=INTEGER},
      Data03 = #{record.data03,jdbcType=INTEGER},
      Data04 = #{record.data04,jdbcType=INTEGER},
      Data05 = #{record.data05,jdbcType=INTEGER},
      Data06 = #{record.data06,jdbcType=INTEGER},
      Data07 = #{record.data07,jdbcType=INTEGER},
      Data08 = #{record.data08,jdbcType=INTEGER},
      Data09 = #{record.data09,jdbcType=INTEGER},
      Data0A = #{record.data0a,jdbcType=INTEGER},
      Data0B = #{record.data0b,jdbcType=INTEGER},
      Data0C = #{record.data0c,jdbcType=INTEGER},
      Data0D = #{record.data0d,jdbcType=INTEGER},
      Data0E = #{record.data0e,jdbcType=INTEGER},
      Data0F = #{record.data0f,jdbcType=INTEGER},
      Data10 = #{record.data10,jdbcType=INTEGER},
      Data11 = #{record.data11,jdbcType=INTEGER},
      Data12 = #{record.data12,jdbcType=INTEGER},
      Data13 = #{record.data13,jdbcType=INTEGER},
      Data14 = #{record.data14,jdbcType=INTEGER},
      Data15 = #{record.data15,jdbcType=INTEGER},
      Data16 = #{record.data16,jdbcType=INTEGER},
      Data17 = #{record.data17,jdbcType=INTEGER},
      Data18 = #{record.data18,jdbcType=INTEGER},
      Data19 = #{record.data19,jdbcType=INTEGER},
      Data1A = #{record.data1a,jdbcType=INTEGER},
      Data1B = #{record.data1b,jdbcType=INTEGER},
      Data1C = #{record.data1c,jdbcType=INTEGER},
      Data1D = #{record.data1d,jdbcType=INTEGER},
      Data1E = #{record.data1e,jdbcType=INTEGER},
      Data1F = #{record.data1f,jdbcType=INTEGER},
      Data20 = #{record.data20,jdbcType=INTEGER},
      Data21 = #{record.data21,jdbcType=INTEGER},
      COMNum = #{record.comnum,jdbcType=LONGVARCHAR},
      Mark = #{record.mark,jdbcType=LONGVARCHAR},
      Preserve = #{record.preserve,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SensorOriginal_0_Test
    set RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      SensorAddress = #{record.sensoraddress,jdbcType=INTEGER},
      Data00 = #{record.data00,jdbcType=INTEGER},
      Data01 = #{record.data01,jdbcType=INTEGER},
      Data02 = #{record.data02,jdbcType=INTEGER},
      Data03 = #{record.data03,jdbcType=INTEGER},
      Data04 = #{record.data04,jdbcType=INTEGER},
      Data05 = #{record.data05,jdbcType=INTEGER},
      Data06 = #{record.data06,jdbcType=INTEGER},
      Data07 = #{record.data07,jdbcType=INTEGER},
      Data08 = #{record.data08,jdbcType=INTEGER},
      Data09 = #{record.data09,jdbcType=INTEGER},
      Data0A = #{record.data0a,jdbcType=INTEGER},
      Data0B = #{record.data0b,jdbcType=INTEGER},
      Data0C = #{record.data0c,jdbcType=INTEGER},
      Data0D = #{record.data0d,jdbcType=INTEGER},
      Data0E = #{record.data0e,jdbcType=INTEGER},
      Data0F = #{record.data0f,jdbcType=INTEGER},
      Data10 = #{record.data10,jdbcType=INTEGER},
      Data11 = #{record.data11,jdbcType=INTEGER},
      Data12 = #{record.data12,jdbcType=INTEGER},
      Data13 = #{record.data13,jdbcType=INTEGER},
      Data14 = #{record.data14,jdbcType=INTEGER},
      Data15 = #{record.data15,jdbcType=INTEGER},
      Data16 = #{record.data16,jdbcType=INTEGER},
      Data17 = #{record.data17,jdbcType=INTEGER},
      Data18 = #{record.data18,jdbcType=INTEGER},
      Data19 = #{record.data19,jdbcType=INTEGER},
      Data1A = #{record.data1a,jdbcType=INTEGER},
      Data1B = #{record.data1b,jdbcType=INTEGER},
      Data1C = #{record.data1c,jdbcType=INTEGER},
      Data1D = #{record.data1d,jdbcType=INTEGER},
      Data1E = #{record.data1e,jdbcType=INTEGER},
      Data1F = #{record.data1f,jdbcType=INTEGER},
      Data20 = #{record.data20,jdbcType=INTEGER},
      Data21 = #{record.data21,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>